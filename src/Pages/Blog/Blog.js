import React from 'react';

const Blog = () => {
  return (
    <div>
      <div className="mt-7 mb-10 max-w-6xl mx-auto">
        <h1 className="text-4xl font-bold tracking-wide leading-normal mt-0 mb-2 text-pink-800 heading">
          1. Difference between SQL and NoSQL?
        </h1>
        <p className="text-lg">
          SQL is a relational database management system, meaning it uses tables and relations to
          store data. NoSQL is a non-relational database management system, meaning it does not use
          tables and relations to store data.
          <br />
          <br /> SQL is a standard database query language used for storing, manipulating, and
          retrieving data from a database
          <br />
          NoSQL is a category of software that is used to store and manage data that is not
          structured in a traditional relational database.
        </p>
        <div className="divider"></div>
        <h1 className="text-4xl font-bold tracking-wide leading-normal mt-0 mb-2 text-pink-800 heading">
          2. What is JWT, and how does it work?
        </h1>
        <p className="text-lg">
          JWT is a JSON Web Token, which is used to securely transmit information between parties.
          <br />
          A JSON Web Token, or JWT, is a string of characters that contains information used to
          authenticate a user on a server. This information can be verified and trusted because it
          is digitally signed. JWTs can be signed using a secret or public/private key pair.
          <br />
          <br />
          The signature algorithm used is important in ensuring the integrity of the token and the
          security of the signature. Once a JWT is signed, the signed token is returned to the user.
          The user then sends the token back to the server with each request. The server can then
          verify the token using the same algorithm that was used to sign the token. <br />
          The header and payload are JSON objects that are encoded using Base64url. The header
          contains information about the token, such as the algorithm used to sign the token. The
          payload contains the information that is being passed to the server, such as the user's
          ID.
          <br />
          The signature is generated by signing the header and payload with a secret or private key.
          The signature is used to verify that the token has not been tampered with.
          <br />
          Once you have the encoded token, you can decode it using a JWT library. most programming
          languages have a library that can be used to decode JWTs.Once you have decoded the token,
          you will have access to the header and payload. The header and payload can be used to
          verify the token and to get information about the user.
        </p>
        <div className="divider"></div>
        <h1 className="text-4xl font-bold tracking-wide leading-normal mt-0 mb-2 text-pink-800 heading">
          3. What is the difference between javascript and NodeJS?
        </h1>
        <p className="text-lg">
          The main difference between JavaScript and Node.js is that JavaScript is a client-side
          scripting language while Node.js is a server-side scripting language. Both are interpreted
          programming languages with their own unique features and purposes.
          <br />
          <br />
          JavaScript is a client-side scripting language that is used to create interactive web
          applications. It runs on the client-side, meaning it is executed on the user&apos;s
          computer. It is used to create things like drop-down menus, form validation, and
          interactive maps. It can also be used to create games and applications that run in the web
          browser.
          <br />
          <br />
          Node.js is a server-side scripting language that is used to create scalable network
          applications. It runs on the server-side, meaning it is executed on the web server. It is
          used to create things like chatbot, real-time applications, and API&apos;s. It can also be
          used to create server-side applications that run in the web browser.
          <br />
          So, the main difference between JavaScript and Node.js is their purpose. JavaScript is
          used to create interactive web applications while Node.js is used to create scalable
          network applications.
        </p>
        <div className="divider"></div>
        <h1 className="text-4xl font-bold tracking-wide leading-normal mt-0 mb-2 text-pink-800 heading">
          4. How does NodeJS handle multiple requests at the same time?
        </h1>
        <p className="text-lg">
          NodeJS is a single-threaded platform that uses an event-driven programming model. This
          means that when a NodeJS application is handling multiple requests at the same time, it is
          actually using an asynchronous programming model to do so.
          <br />
          <br />
          In an asynchronous programming model, the NodeJS application does not wait for a request
          to finish before starting to handle the next request. Instead, it uses an event loop to
          handle all incoming requests. The event loop is a mechanism that allows NodeJS to process
          multiple requests concurrently.
          <br />
          Each request that comes into the NodeJS application is added to the event loop. The NodeJS
          application then processes each request one at a time. However, because the NodeJS
          application is not waiting for each request to finish before starting to handle the next
          request, it is able to process multiple requests simultaneously.
          <br />
          This asynchronous programming model is what allows NodeJS to handle multiple requests at
          the same time. By using an event loop, the NodeJS application can process multiple
          requests concurrently and scale to support a large number of concurrent users.
        </p>
      </div>
    </div>
  );
};

export default Blog;
